:root {
	--tiny-spacing: calc(var(--spacing) / 8);
	--small-spacing: calc(var(--spacing) / 2);
	--semi-medium-spacing: calc(var(--spacing) * 1.5);
	--medium-spacing: calc(var(--spacing) * 2);
	--large-spacing: calc(var(--spacing) * 4);

	/* We unfortunately cannot use ch units to define the width here, as
   that causes flash of unstyled fonts with web fonts. Just hardcode it for now.*/
	--max-content-width: 30.8rem;

	font-size: clamp(100%, 90% + 0.5vi, 130%);
}

:root {
	color-scheme: light;

	--text-color: #121212;
	--background-color: #ebfffb;

	--footer-text-color: #f5f3f3;
	--footer-background-color: #171717;

	--primary-color: #0074BD;
	--primary-background-color: #b3defa;
	--highlight-color: #d5efff;

    --inline-code-background-color: #caf3ff;

	--header-line-height: 1.1;
	--paragraph-line-height: 1.34;
	--spacing: 1.12rem;
	--hover-outline-width: 3px;
    --active-outline-width: 2px;
}

/* Need this hack as chrome doesn't support CSS variables in ::selection */
/* Furthermore, we need to set selection color opacity to 0.99 for this bug in Safari:
https://github.com/w3c/csswg-drafts/issues/6853
*/
::selection {
	background-color: rgb(18, 18, 18, 0.99);
	color: rgb(245, 243, 243, 0.99);
}

header ::selection,
footer ::selection,
pre ::selection {
	background-color: rgb(245, 243, 243, 0.99);
	color: rgb(18, 18, 18, 0.99);
}

html[data-theme='DARK'] {
	color-scheme: dark;

	--text-color: #c7c7c4;
	--background-color: #010112;

	--footer-text-color: #c7c7c4;
	--footer-background-color: #09090a;

	--primary-color: #1a77ad;
	--primary-background-color: #02304b;
	--highlight-color: rgb(22, 40, 67);

    --inline-code-background-color: #212327;

	--header-line-height: 1.15;
	--paragraph-line-height: 1.38;
	--spacing: 1.2rem;
	--hover-outline-width: 3px;
    --active-outline-width: 1.5px;
}

html[data-theme='DARK'] ::selection {
	background-color: rgb(215, 215, 215, 0.99);
	color: rgb(6, 6, 6, 0.99);
}

@media (prefers-color-scheme: dark) {
	:root {
		color-scheme: dark;

		--text-color: #c7c7c4;
		--background-color: #010112;

		--footer-text-color: #c7c7c4;
		--footer-background-color: #09090a;

		--primary-color: #1a77ad;
		--primary-background-color: #02304b;
		--highlight-color: rgb(22, 40, 67);

        --inline-code-background-color: #212327;

		--header-line-height: 1.15;
		--paragraph-line-height: 1.38;
		--spacing: 1.2rem;
		--hover-outline-width: 3px;
        --active-outline-width: 1.5px;
	}

	::selection {
		background-color: rgb(215, 215, 215, 0.99);
		color: rgb(6, 6, 6, 0.99);
	}

	html[data-theme='LIGHT'] {
		color-scheme: light;

		--text-color: #121212;
		--background-color: #ebfffb;

		--footer-text-color: #f5f3f3;
		--footer-background-color: #171717;

		--primary-color: #0074BD;
		--primary-background-color: #b3defa;
		--highlight-color: #d5efff;

        --inline-code-background-color: #caf3ff;

		--header-line-height: 1.1;
		--paragraph-line-height: 1.34;
		--spacing: 1.12rem;
		--hover-outline-width: 3px;
        --active-outline-width: 2px;
	}

	html[data-theme='LIGHT'] ::selection {
		background-color: rgb(18, 18, 18, 0.99);
		color: rgb(245, 243, 243, 0.99);
	}

	html[data-theme='LIGHT'] header ::selection,
	html[data-theme='LIGHT'] footer ::selection,
	html[data-theme='LIGHT'] pre ::selection {
		background-color: rgb(245, 243, 243, 0.99);
		color: rgb(18, 18, 18, 0.99);
	}
}

html {
	font-family: 'source-sans-pro', sans-serif;
	font-style: normal;
	line-height: var(--paragraph-line-height);
}

em,
cite {
	font-style: italic;
	font-family: 'source-serif-pro', serif;
}

b {
	font-weight: 700;
}

h1,
h2,
h3 {
	font-weight: 700;
	line-height: 1.05;
	outline: none;
}

h2,
h3 {
	margin-top: var(--large-spacing);
	margin-bottom: var(--spacing);
}

h2 a,
h3 a {
	text-decoration: none;
	color: inherit;
	line-height: var(--header-line-height);
}

h1 {
	font-size: 2.5rem;
	letter-spacing: -0.6px;
}

h2 {
	font-size: 1.5rem;
	letter-spacing: -0.3px;
}

h3 {
	font-size: 1.1rem;
}

h2 span,
h3 span {
	font-weight: 700;
	line-height: var(--header-line-height);
}

h1.huge {
	font-size: 4rem;
	line-height: 0.9;
	letter-spacing: -3px;
	margin-bottom: var(--medium-spacing);
	/*
  Yes, this is a magic number. With optical adjustments this isn't necessarily bad.
  https://rafaltomal.com/optically-perfect/
  */
	margin-left: -3px;
}

html {
	background-color: var(--background-color);
	color: var(--text-color);

	transition:
		background-color 0.2s,
		color 0.1s;
	scroll-behavior: smooth;
}

html,
body {
	scrollbar-gutter: both;
}

body {
	display: flex;
	flex-direction: column;
}

main {
	flex-grow: 1;
	width: var(--max-content-width);
	margin: auto;
}

p {
	margin-bottom: var(--spacing);
}

li {
	margin-top: var(--tiny-spacing);
}

main:not(.tmpl-post) h1:not(.huge) {
	margin-bottom: var(--medium-spacing);
}

pre,
code {
	border-radius: 5px;
	font-size: 83%;
}

.header-anchor {
	position: relative;
}

.anchor {
	position: absolute;
	top: 0.24rem;
	left: -1.5rem;
}

@media only screen and (max-width: 620px) {
	main {
		max-width: unset;
		margin: 0;
		padding: 0 var(--medium-spacing);
	}

	.post-content details,
	details[open],
	details[open] .details-content {
		width: auto;
	}

	.anchor {
		left: -1.2rem;
	}
}

@media only screen and (max-width: 660px) {
	main {
		width: auto;
		margin: 0;
		padding: 0 var(--medium-spacing);
	}
    header nav {
		width: auto;
		margin: 0;
		padding: 0 var(--medium-spacing);
	}
}

@media only screen and (max-width: 450px) {
	h1.huge {
		font-size: 3rem;
		letter-spacing: -1px;
		margin-left: -2px;
	}

	main {
		padding: 0 var(--spacing);
	}
    header nav {
        padding: 0 var(--spacing);
    }

	.anchor {
		position: relative;
		left: unset;
		top: unset;

		display: inline-block;
		margin-left: var(--small-spacing);
	}
}

@media only screen and (max-width: 350px) {
	h1.huge {
		font-size: 2.5rem;
		letter-spacing: unset;
	}

	ul {
		padding-left: var(--spacing);
	}

	ul.post-chain {
		flex-direction: column;
		gap: var(--spacing);
	}
}

/** If script is disabled, we can't use javascript to make scrollable areas focusable.
For those users, we'll just wrap the code instead. */
.script-disabled code {
	text-wrap: wrap;
}

:not(pre) > code {
	padding: var(--tiny-spacing);
    background-color: var(--inline-code-background-color);
}

#heading-dots {
    position: relative;
}

#heading-dots canvas {
    position: absolute;
    z-index: -1;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}
